addi    $31    $0     16       0 + 16 =  16 addr:  0 =  16           PC: 0
addi    $31    $1     -32      0 +-32 = -32 addr:  1 = -32           PC: 4
addi    $31    $2     39       0 + 39 =  39 addr:  2 =  39           PC: 8
add     $1     $2     $10    -32 + 39 =   7 addr: 10 =   7           PC:12
sub     $2     $1     $11     39 --32 =  71 addr: 11 =  71           PC:16
subu    $1     $2     $4     -32 - 39 = -71 addr:  4 = -71           PC:20
addu    $0     $0     $5      16 + 16 =  32 addr:  5 =  32           PC:24
sw      $0     $4     0       16 +  0 =  16 Mem[16] = -71            PC:28
slt     $0     $1     $12     16 < -32 = False addr: 12 = 0          PC:32
lw      $31    $6     16      Mem[0 + 16 =  16] = -71  addr: 6 = -71 PC:36
subu    $0     $6     $13     16 --71 =  87 addr: 13 = 87            PC:40 overflow occur !
sw      $31    $5     4       0 + 4 = 4  Mem[4] =  32                PC:44
sw      $31    $1     8       0 + 8 = 8  Mem[8] = -32                PC:48
eof 
----------------------
R-type  $s2  $s3  $s1
I-type  $s2  $s1  im
----------------------
